// Demo data for Writing Tracker
// Ch·∫°y script n√†y trong console ƒë·ªÉ th√™m d·ªØ li·ªáu m·∫´u

const demoArticles = [
    {
        id: 1,
        title: "H·ªçc Machine Learning t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao",
        date: "2025-01-15",
        wordCount: 2500,
        category: "technical",
        createdAt: "2025-01-15T10:00:00.000Z"
    },
    {
        id: 2,
        title: "Kinh nghi·ªám l√†m vi·ªác v·ªõi AI trong th·ª±c t·∫ø",
        date: "2025-01-14",
        wordCount: 1800,
        category: "business",
        createdAt: "2025-01-14T14:30:00.000Z"
    },
    {
        id: 3,
        title: "Reflection v·ªÅ h√†nh tr√¨nh h·ªçc l·∫≠p tr√¨nh",
        date: "2025-01-13",
        wordCount: 1200,
        category: "personal",
        createdAt: "2025-01-13T09:15:00.000Z"
    },
    {
        id: 4,
        title: "H∆∞·ªõng d·∫´n setup m√¥i tr∆∞·ªùng Python cho AI",
        date: "2025-01-12",
        wordCount: 2200,
        category: "technical",
        createdAt: "2025-01-12T16:45:00.000Z"
    },
    {
        id: 5,
        title: "T·∫ßm quan tr·ªçng c·ªßa vi·ªác vi·∫øt l√°ch trong ng√†nh IT",
        date: "2025-01-11",
        wordCount: 1500,
        category: "education",
        createdAt: "2025-01-11T11:20:00.000Z"
    },
    {
        id: 6,
        title: "Review kh√≥a h·ªçc AI/ML m·ªõi nh·∫•t",
        date: "2025-01-10",
        wordCount: 1900,
        category: "education",
        createdAt: "2025-01-10T13:10:00.000Z"
    },
    {
        id: 7,
        title: "Tips ƒë·ªÉ maintain streak vi·∫øt l√°ch",
        date: "2025-01-09",
        wordCount: 1100,
        category: "personal",
        createdAt: "2025-01-09T08:30:00.000Z"
    },
    {
        id: 8,
        title: "So s√°nh c√°c framework AI ph·ªï bi·∫øn",
        date: "2025-01-08",
        wordCount: 2800,
        category: "technical",
        createdAt: "2025-01-08T15:25:00.000Z"
    },
    {
        id: 9,
        title: "Chi·∫øn l∆∞·ª£c ph√°t tri·ªÉn s·∫£n ph·∫©m AI",
        date: "2025-01-07",
        wordCount: 2100,
        category: "business",
        createdAt: "2025-01-07T12:40:00.000Z"
    },
    {
        id: 10,
        title: "Nh·ªØng ƒëi·ªÅu c·∫ßn bi·∫øt v·ªÅ MLOps",
        date: "2025-01-06",
        wordCount: 2400,
        category: "technical",
        createdAt: "2025-01-06T10:15:00.000Z"
    },
    {
        id: 11,
        title: "C√°ch x√¢y d·ª±ng portfolio AI/ML",
        date: "2025-01-05",
        wordCount: 1700,
        category: "education",
        createdAt: "2025-01-05T14:50:00.000Z"
    },
    {
        id: 12,
        title: "Reflection v·ªÅ nƒÉm 2024 v√† k·∫ø ho·∫°ch 2025",
        date: "2025-01-04",
        wordCount: 2000,
        category: "personal",
        createdAt: "2025-01-04T09:00:00.000Z"
    },
    {
        id: 13,
        title: "Deep Learning v·ªõi PyTorch - Ph·∫ßn 1",
        date: "2025-01-03",
        wordCount: 2600,
        category: "technical",
        createdAt: "2025-01-03T16:20:00.000Z"
    },
    {
        id: 14,
        title: "Th·ªã tr∆∞·ªùng AI Vi·ªát Nam 2025",
        date: "2025-01-02",
        wordCount: 1800,
        category: "business",
        createdAt: "2025-01-02T11:35:00.000Z"
    },
    {
        id: 15,
        title: "H·ªçc AI/ML hi·ªáu qu·∫£ - Ph∆∞∆°ng ph√°p c√° nh√¢n",
        date: "2025-01-01",
        wordCount: 2200,
        category: "education",
        createdAt: "2025-01-01T08:00:00.000Z"
    }
];

const demoGoals = {
    monthly: 15,
    streak: 30
};

// Function ƒë·ªÉ load demo data
function loadDemoData() {
    // L∆∞u articles
    localStorage.setItem('writingTrackerArticles', JSON.stringify(demoArticles));
    
    // L∆∞u goals
    localStorage.setItem('writingTrackerGoals', JSON.stringify(demoGoals));
    
    console.log('‚úÖ Demo data ƒë√£ ƒë∆∞·ª£c load th√†nh c√¥ng!');
    console.log('üìä T·ªïng s·ªë b√†i vi·∫øt:', demoArticles.length);
    console.log('üéØ M·ª•c ti√™u th√°ng:', demoGoals.monthly);
    console.log('üî• M·ª•c ti√™u streak:', demoGoals.streak);
    
    // Reload trang ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu m·ªõi
    if (confirm('D·ªØ li·ªáu demo ƒë√£ ƒë∆∞·ª£c load. B·∫°n c√≥ mu·ªën reload trang ƒë·ªÉ xem k·∫øt qu·∫£?')) {
        window.location.reload();
    }
}

// Function ƒë·ªÉ clear t·∫•t c·∫£ d·ªØ li·ªáu
function clearAllData() {
    if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t·∫•t c·∫£ d·ªØ li·ªáu?')) {
        localStorage.removeItem('writingTrackerArticles');
        localStorage.removeItem('writingTrackerGoals');
        console.log('üóëÔ∏è T·∫•t c·∫£ d·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c x√≥a!');
        window.location.reload();
    }
}

// Function ƒë·ªÉ export d·ªØ li·ªáu
function exportData() {
    const articles = JSON.parse(localStorage.getItem('writingTrackerArticles') || '[]');
    const goals = JSON.parse(localStorage.getItem('writingTrackerGoals') || '{}');
    
    const data = {
        articles: articles,
        goals: goals,
        exportDate: new Date().toISOString()
    };
    
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `writing-tracker-backup-${new Date().toISOString().split('T')[0]}.json`;
    a.click();
    URL.revokeObjectURL(url);
    
    console.log('üì§ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c export!');
}

// Function ƒë·ªÉ import d·ªØ li·ªáu
function importData() {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = '.json';
    input.onchange = function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    
                    if (data.articles) {
                        localStorage.setItem('writingTrackerArticles', JSON.stringify(data.articles));
                    }
                    
                    if (data.goals) {
                        localStorage.setItem('writingTrackerGoals', JSON.stringify(data.goals));
                    }
                    
                    console.log('üì• D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c import th√†nh c√¥ng!');
                    window.location.reload();
                } catch (error) {
                    console.error('‚ùå L·ªói khi import d·ªØ li·ªáu:', error);
                    alert('File kh√¥ng h·ª£p l·ªá!');
                }
            };
            reader.readAsText(file);
        }
    };
    input.click();
}

// Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
console.log(`
üéâ Writing Tracker - Demo Data Script

üìã C√°c l·ªánh c√≥ s·∫µn:
‚Ä¢ loadDemoData() - Load d·ªØ li·ªáu demo
‚Ä¢ clearAllData() - X√≥a t·∫•t c·∫£ d·ªØ li·ªáu
‚Ä¢ exportData() - Export d·ªØ li·ªáu ra file JSON
‚Ä¢ importData() - Import d·ªØ li·ªáu t·ª´ file JSON

üöÄ ƒê·ªÉ b·∫Øt ƒë·∫ßu, ch·∫°y: loadDemoData()
`);

// Auto-load demo data n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu
if (!localStorage.getItem('writingTrackerArticles')) {
    console.log('üí° Ch∆∞a c√≥ d·ªØ li·ªáu. Ch·∫°y loadDemoData() ƒë·ªÉ th√™m d·ªØ li·ªáu m·∫´u!');
}
